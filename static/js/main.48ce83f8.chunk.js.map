{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","title","removeItemFromCart","filter","cartActions","actions","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cart","map","uiSlice","cartIsVisible","notifications","toggle","showNotifications","status","message","uiActions","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","notification","isInitial","App","showCart","ui","useEffect","a","fetchRequest","fetch","response","ok","Error","json","data","cartData","sendRequest","method","body","JSON","stringify","sendCartData","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48ce83f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1Hjln\",\"details\":\"CartItem_details__2j9Il\",\"quantity\":\"CartItem_quantity__22p1C\",\"price\":\"CartItem_price__3jxYd\",\"itemprice\":\"CartItem_itemprice__Nq_KK\",\"actions\":\"CartItem_actions__3TQgX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__1uTy4\",\"price\":\"ProductItem_price__1K5y6\",\"actions\":\"ProductItem_actions__3H6wV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1_rMD\",\"error\":\"Notification_error__2c1ec\",\"success\":\"Notification_success__2IJYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3G1al\",\"badge\":\"CartButton_badge__2mfV6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__16xHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__1wVWz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__Hrudm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__3kSpT\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n        changed: false,\r\n    },\r\n    reducers: {\r\n        replaceCart(state, action) {\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n        },\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(\r\n                (item) => item.id === newItem.id\r\n            );\r\n            state.totalQuantity++;\r\n            state.changed = true;\r\n            if (!existingItem) {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title,\r\n                });\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice =\r\n                    existingItem.totalPrice + newItem.price;\r\n            }\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find((item) => item.id === id);\r\n            state.totalQuantity--;\r\n            state.changed = true;\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter((item) => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice =\r\n                    existingItem.totalPrice - existingItem.price;\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\nimport classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n    const dispatch = useDispatch();\n    const { title, quantity, total, price, id } = props.item;\n\n    const removeFromCartHandler = () => {\n        dispatch(cartActions.removeItemFromCart(id));\n    };\n\n    const addToCartHandler = () => {\n        dispatch(\n            cartActions.addItemToCart({\n                id,\n                title,\n                price,\n            })\n        );\n    };\n\n    return (\n        <li className={classes.item}>\n            <header>\n                <h3>{title}</h3>\n                <div className={classes.price}>\n                    ${total.toFixed(2)}{' '}\n                    <span className={classes.itemprice}>\n                        (${price.toFixed(2)}/item)\n                    </span>\n                </div>\n            </header>\n            <div className={classes.details}>\n                <div className={classes.quantity}>\n                    x <span>{quantity}</span>\n                </div>\n                <div className={classes.actions}>\n                    <button onClick={removeFromCartHandler}>-</button>\n                    <button onClick={addToCartHandler}>+</button>\n                </div>\n            </div>\n        </li>\n    );\n};\n\nexport default CartItem;\n","import { useSelector } from 'react-redux';\nimport Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\n\nconst Cart = (props) => {\n    const cartItems = useSelector((state) => state.cart.items);\n\n    return (\n        <Card className={classes.cart}>\n            <h2>Your Shopping Cart</h2>\n            <ul>\n                {cartItems.map((item) => (\n                    <CartItem\n                        key={item.id}\n                        item={{\n                            id: item.id,\n                            title: item.name,\n                            quantity: item.quantity,\n                            total: item.totalPrice,\n                            price: item.price,\n                        }}\n                    />\n                ))}\n            </ul>\n        </Card>\n    );\n};\n\nexport default Cart;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst uiSlice = createSlice({\r\n    name: 'ui',\r\n    initialState: { cartIsVisible: false, notifications: null },\r\n    reducers: {\r\n        toggle(state) {\r\n            state.cartIsVisible = !state.cartIsVisible;\r\n        },\r\n        showNotifications(state, action) {\r\n            state.notifications = {\r\n                status: action.payload.status,\r\n                title: action.payload.title,\r\n                message: action.payload.message,\r\n            };\r\n        },\r\n    },\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;\r\n","import { useDispatch, useSelector } from 'react-redux';\nimport { uiActions } from '../../store/ui-slice';\nimport classes from './CartButton.module.css';\n\nconst CartButton = (props) => {\n    const dispatch = useDispatch();\n    const cartQuantity = useSelector((state) => state.cart.totalQuantity);\n\n    const toggleCartHandler = () => {\n        dispatch(uiActions.toggle());\n    };\n\n    return (\n        <button className={classes.button} onClick={toggleCartHandler}>\n            <span>My Cart</span>\n            <span className={classes.badge}>{cartQuantity}</span>\n        </button>\n    );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nconst ProductItem = (props) => {\n    const dispatch = useDispatch();\n\n    const { title, price, description, id } = props;\n\n    const addToCartHandler = () => {\n        dispatch(\n            cartActions.addItemToCart({\n                id,\n                title,\n                price,\n            })\n        );\n    };\n\n    return (\n        <li className={classes.item}>\n            <Card>\n                <header>\n                    <h3>{title}</h3>\n                    <div className={classes.price}>${price.toFixed(2)}</div>\n                </header>\n                <p>{description}</p>\n                <div className={classes.actions}>\n                    <button onClick={addToCartHandler}>Add to Cart</button>\n                </div>\n            </Card>\n        </li>\n    );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst DUMMY_PRODUCTS = [\n    {\n        id: 'p1',\n        price: 6,\n        title: 'My First Book',\n        description: 'The first book I ever wrote',\n    },\n    {\n        id: 'p2',\n        price: 5,\n        title: 'My Second Book',\n        description: 'The second book I ever wrote',\n    },\n];\n\nconst Products = (props) => {\n    return (\n        <section className={classes.products}>\n            <h2>Buy your favorite products</h2>\n            <ul>\n                {DUMMY_PRODUCTS.map((product) => (\n                    <ProductItem\n                        key={product.id}\n                        id={product.id}\n                        title={product.title}\n                        price={product.price}\n                        description={product.description}\n                    />\n                ))}\n            </ul>\n        </section>\n    );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\n\nconst Notification = (props) => {\n  let specialClasses = '';\n\n  if (props.status === 'error') {\n    specialClasses = classes.error;\n  }\n  if (props.status === 'success') {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;\n","import React, { Fragment, useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { fetchCartData, sendCartData } from './store/cart-actions';\n\nlet isInitial = true;\n\nfunction App() {\n    const showCart = useSelector((state) => state.ui.cartIsVisible);\n    const cart = useSelector((state) => state.cart);\n    const notifications = useSelector((state) => state.ui.notifications);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchCartData());\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (isInitial) {\n            isInitial = false;\n            return;\n        }\n\n        if (cart.changed) {\n            dispatch(sendCartData(cart));\n        }\n    }, [cart, dispatch]);\n\n    return (\n        <Fragment>\n            {notifications && (\n                <Notification\n                    status={notifications.status}\n                    title={notifications.title}\n                    message={notifications.message}\n                />\n            )}\n            <Layout>\n                {showCart && <Cart />}\n                <Products />\n            </Layout>\n        </Fragment>\n    );\n}\n\nexport default App;\n","import { cartActions } from './cart-slice';\r\nimport { uiActions } from './ui-slice';\r\n\r\nexport const fetchCartData = () => {\r\n    return async (dispatch) => {\r\n        const fetchRequest = async () => {\r\n            const response = await fetch(\r\n                'https://react-redux-cart-84fc6-default-rtdb.firebaseio.com/cart.json'\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Fetching cart data failed!');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        };\r\n\r\n        try {\r\n            const cartData = await fetchRequest();\r\n            dispatch(\r\n                cartActions.replaceCart({\r\n                    items: cartData.items || [],\r\n                    totalQuantity: cartData.totalQuantity,\r\n                })\r\n            );\r\n        } catch (error) {}\r\n    };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(\r\n            uiActions.showNotifications({\r\n                status: 'pending',\r\n                title: 'Sending...',\r\n                message: 'Sending cart data.',\r\n            })\r\n        );\r\n\r\n        const sendRequest = async () => {\r\n            const response = await fetch(\r\n                'https://react-redux-cart-84fc6-default-rtdb.firebaseio.com/cart.json',\r\n                {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify({\r\n                        items: cart.items,\r\n                        totalQuantity: cart.totalQuantity,\r\n                    }),\r\n                }\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Sending cart data failed!');\r\n            }\r\n        };\r\n\r\n        try {\r\n            await sendRequest();\r\n\r\n            dispatch(\r\n                uiActions.showNotifications({\r\n                    status: 'success',\r\n                    title: 'Success!',\r\n                    message: 'Sent cart data successfully!',\r\n                })\r\n            );\r\n        } catch (error) {\r\n            dispatch(\r\n                uiActions.showNotifications({\r\n                    status: 'error',\r\n                    title: 'Error!',\r\n                    message: 'Sending cart data failed!.',\r\n                })\r\n            );\r\n        }\r\n    };\r\n};\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport cartSlice from './cart-slice';\r\nimport uiSlice from './ui-slice';\r\n\r\nconst store = configureStore({\r\n    reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer },\r\n});\r\n\r\nexport default store;\r\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}